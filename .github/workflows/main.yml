name: CI Kalunga
on:
  push:
    branches: [ master ]
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:

  unit-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
        
      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      - name: Run tests
        run: ./gradlew testDebugUnitTest
          
      - name: Validar resultado error
        if: ${{ failure() }}
        env:
         MENSAJE_ERROR: No se puede realizar el merge porque FALLO una o más pruebas unitarias
        run: echo "::set-output name=respuesta::${MENSAJE_ERROR}"
        
      - name: Validar resultado exitoso
        if: ${{ success() }}
        env:
          MENSAJE_EXITO: El resultado de las pruebas unitarias fue exitoso
        run: echo "::set-output name=respuesta::${MENSAJE_EXITO}"
            
  static-code-analysis:
    needs: [unit-test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
        
      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      - name: set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
          
      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
          
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_CI }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build sonarqube --info

      - name: Validar resultado error
        if: ${{ failure() }}
        env:
         MENSAJE_ERROR: No se puede realizar el merge porque FALLO la revisión de código estático
        run: echo "::set-output name=respuesta::${MENSAJE_ERROR}"
        
      - name: Validar resultado exitoso
        if: ${{ success() }}
        env:
          MENSAJE_EXITO: El resultado del análisis estático fue exitoso
        run: echo "::set-output name=respuesta::${MENSAJE_EXITO}"
