plugins {
    id "jacoco"
    id 'com.android.application'
    id 'kotlin-android'
    id 'org.sonarqube'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'com.google.gms.google-services'
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
    jacoco.excludes = ['jdk.internal.*']
}

task jacocoTestReport(type: JacocoReport, dependsOn: "testDebugUnitTest") {
    group = "Reporting"
    description = "Generate Jacoco coverage reports"

    reports {
        xml.required = true
        xml.destination = file("build/reports/jacoco/test/jacocoTestReport.xml")
        html.required = true
    }

    def fileFilter = ['**/AndroidManifest.xml', '**/strings.xml', '**/*.xml', '**/*.json']
    def mainSrc = "${project.projectDir}/src/main/java"
    def kotlinTree = fileTree(dir: "$project.buildDir/tmp/kotlin-classes/debugUnitTest", excludes: fileFilter)
    def kotlinTreeModels = fileTree(dir: "${project.projectDir}/src/main/java/com/<package_dir>/model", excludes: [])

    sourceDirectories.setFrom(files([mainSrc]))
    classDirectories.setFrom(files([kotlinTree, kotlinTreeModels]))
    executionData.setFrom(fileTree(dir: "$project.projectDir",
            includes: ['**/*.exec', '**/*.ec']
    ))
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.jhonnatan.kalunga"
        minSdkVersion 16
        targetSdkVersion 30
        multiDexEnabled = true
        versionCode 3
        versionName "1.0.2"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
    
    lintOptions {
          abortOnError false
    }

    buildFeatures {
        dataBinding true
    }

    testOptions {
        unitTests.includeAndroidResources = true
        unitTests.returnDefaultValues = true
    }

    sourceSets {
        main {
            assets {
                srcDirs 'src\\main\\assets'
            }
        }
    }
    namespace 'com.jhonnatan.kalunga'
}

dependencies {
    //noinspection DifferentStdlibGradleVersion
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.core:core-ktx:$core_ktx_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.fragment:fragment-ktx:$fragment_ktx_version"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "io.github.serpro69:kotlin-faker:$faker_version"
    implementation "androidx.multidex:multidex:$multidex_version"
    implementation "pub.devrel:easypermissions:$easypermissions_version"
    implementation "com.google.android.play:core:$playcore_version"
    implementation "com.google.android.gms:play-services-auth:$play_services_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation platform("com.google.firebase:firebase-bom:$firebase_bom_version")
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-core'
    implementation 'com.google.firebase:firebase-auth'
    implementation "com.facebook.android:facebook-android-sdk:$facebook_sdk_version"
    implementation "com.facebook.android:facebook-login:$facebook_login_version"
    implementation "com.google.code.gson:gson:$gson_version"
    kapt "androidx.room:room-compiler:$room_version"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    testImplementation "junit:junit:$junit_version"
    testImplementation "androidx.test:core:$test_core_version"
    testImplementation "org.robolectric:robolectric:$robolectric_version"
    testImplementation "androidx.test.ext:junit-ktx:$test_junit_version"
    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockito_kotlin_version"
    testImplementation "org.mockito:mockito-core:$mockito_core_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    testImplementation "org.json:json:$json_version"
    androidTestImplementation "androidx.test.ext:junit:$test_junit_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_core_version"
    androidTestImplementation "androidx.room:room-testing:$room_version"
    androidTestImplementation "androidx.test:core:$test_core_version"
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}
